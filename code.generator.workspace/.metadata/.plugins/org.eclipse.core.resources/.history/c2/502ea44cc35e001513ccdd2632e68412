<?xml version="1.0" encoding="UTF-8"?>
  
#define FSM_DEBUG      
#include <stdio.h>
#include <string.h>
#include <omnetpp.h>
		
		
class FSM: public cSimpleModule{
	cFSM fsm;
	enum {	
			INIT = 0,
			
 		 };

public:
    FSM();
    virtual ~FSM();

protected:
    virtual void initialize();
    virtual void handleMessage(cMessage *msg);
};

Define_Module(FSM);

FSM::FSM() {}

FSM::~FSM() {}

void Tic::initialize() {

    fsm.setName("fsm");

}


void FSM::handleMessage(cMessage *msg) {

	FSM_Switch(fsm){
		               
		case FSM_Exit(INIT):   
												
								if(guardInitToA){ 
								  //effect
								  effectInitToA;
								  FSM_Goto(fsm, );
								}
								break;

			case FSM_Enter(ZustandA):   
								entryVonZustandA
								break; 

			case FSM_Exit(ZustandA):
 								//exit code
								exitVonZustandA				
								if(guardAToB){ 
								  //effect
								  effectAToB;
								  FSM_Goto(fsm, );
								}
								break;

			case FSM_Enter(ZustandB):   
								entryVonZustandB
								break; 

			case FSM_Exit(ZustandB):
 								//exit code
								 exitVonZustandB				
								if(guardBToA){ 
								  //effect
								  effectBToA;
								  FSM_Goto(fsm, );
								}
								break;

		  
	}
}		
		
	
  