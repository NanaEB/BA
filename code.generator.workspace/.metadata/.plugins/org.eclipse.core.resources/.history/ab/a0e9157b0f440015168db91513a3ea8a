<?xml version="1.0" encoding="UTF-8"?>
#define FSM_DEBUG      
#include <stdio.h>
#include <string.h>
#include <omnetpp.h>
		
		
class FSM: public cSimpleModule{
	cFSM fsm;
	enum {	
			INIT = 0,
			a = FSM_Steady(1),
			d = FSM_Steady(2),
			 = FSM_Steady(3),
			b = FSM_Transient(1),
			c = FSM_Transient(2),
			
 		 };

public:
    FSM();
    virtual ~FSM();

protected:
    virtual void initialize();
    virtual void handleMessage(cMessage *msg);
};

Define_Module(FSM);

FSM::FSM() {}

FSM::~FSM() {}

void Tic::initialize() {

    fsm.setName("fsm");

}


void FSM::handleMessage(cMessage *msg) {

	FSM_Switch(fsm){
		
	                
		case FSM_Exit(INIT):   
												
								if(hallo){ 
								  //effect
								  jaBitte();
								  FSM_Goto(fsm, a);
								} 
								  //effect
								  eff ;
								  FSM_Goto(fsm, );
								
								break;

			case FSM_Enter(a):   
								entryA; EntryAA:
								break; 

			case FSM_Exit(a):  
			 
				
								if(guardab){ 
								  //effect
								  effectab;
								  FSM_Goto(fsm, b);
								} 
								  //effect
								  effectac;
								  FSM_Goto(fsm, c);
								
								break;

			case FSM_Enter(b):   
								entryBB; EntryB:
								break; 

			case FSM_Exit(b):  
			 
				
								if(guardbc){ 
								  //effect
								  effectbc;
								  FSM_Goto(fsm, c);
								}
								break;

			case FSM_Enter(c):   
								
								break; 

			case FSM_Exit(c):  
			 
				
								if(guardcd){
								  FSM_Goto(fsm, d);
								}
								break;

			case FSM_Enter(d):   
								
								break; 

			case FSM_Exit(d):  
			 
				
								if(h){
								  FSM_Goto(fsm, a);
								}
								break;

			case FSM_Enter():   
								
								break; 

			case FSM_Exit():  
			 

								break;

		  
	}
}		
		
	