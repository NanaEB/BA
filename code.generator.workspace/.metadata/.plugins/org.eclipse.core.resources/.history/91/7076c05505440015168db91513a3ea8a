<?xml version="1.0" encoding="UTF-8"?>
#define FSM_DEBUG      
#include <stdio.h>
#include <string.h>
#include <omnetpp.h>
		
		
class FSM: public cSimpleModule{
	cFSM fsm;
	enum {	
			INIT = 0,
			a = FSM_Steady(1),
			d = FSM_Steady(2),
			 = FSM_Steady(3),
			b = FSM_Transient(1),
			c = FSM_Transient(2),
			
 		 };

public:
    FSM();
    virtual ~FSM();

protected:
    virtual void initialize();
    virtual void handleMessage(cMessage *msg);
};

Define_Module(FSM);

FSM::FSM() {}

FSM::~FSM() {}

void Tic::initialize() {

    fsm.setName("fsm");

}


void FSM::handleMessage(cMessage *msg) {

	FSM_Switch(fsm){
		
	                
		case FSM_Exit(INIT):	0
			 	 				FSM_Goto(fsm, a);
								0
			 	 				FSM_Goto(fsm, );
								break;
	
		
			
		case FSM_Enter(a):
							break;
			 
		
		case FSM_Exit(a):	7if(guardab){
								//effect
								effectab;
								
			 	 				FSM_Goto(fsm, b);
								}
								0//effect
								effectac;
								
			 	 				FSM_Goto(fsm, c);
								}
								break;
							break;
			 
			
	

		
			
		case FSM_Enter(b):
							break;
			 
		
		case FSM_Exit(b):	7if(guardbc){
								//effect
								effectbc;
								
			 	 				FSM_Goto(fsm, c);
								}
								break;
							break;
			 
			
	

		
			
		case FSM_Enter(c):
							break;
			 
		
		case FSM_Exit(c):	7if(guardcd){
								//effect
								;
								
			 	 				FSM_Goto(fsm, d);
								}
								break;
							break;
			 
			
	

		
			
		case FSM_Enter(d):
							break;
			 
		
		case FSM_Exit(d):	0
			 	 				FSM_Goto(fsm, a);
								break;
							break;
			 
			
	

		
			
		case FSM_Enter():
							break;
			 
		
		case FSM_Exit():	break;
							break;
			 
			
	


	}
}		
		
	