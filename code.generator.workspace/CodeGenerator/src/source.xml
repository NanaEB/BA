<?xml version="1.0" encoding="UTF-8"?>
<fsm:FSM xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fsm="http://www.kermeta.org/fsm">
  <states xsi:type="fsm:InitialState" name="init" outgoingTrans="//@states[name='init']/@outTrans.0" incomingTrans="//@states[name='E']/@outTrans.0 //@states[name='D']/@outTrans.2">
    <outTrans input="init_inA" output="init_outA" target="//@states[name='A']" source="//@states[name='init']"/>
  </states>
  <states xsi:type="fsm:SteadyState" name="A" outgoingTrans="//@states[name='A']/@outTrans.0 //@states[name='A']/@outTrans.1" incomingTrans="//@states[name='init']/@outTrans.0 //@states[name='D']/@outTrans.1">
    <outTrans input="AinB" output="AoutB" target="//@states[name='B']" source="//@states[name='A']"/>
    <outTrans input="AinC" output="AoutC" target="//@states[name='C']" source="//@states[name='A']"/>
  </states>
  <states xsi:type="fsm:TransientState" name="B" outgoingTrans="//@states[name='B']/@outTrans.0" incomingTrans="//@states[name='A']/@outTrans.0">
    <outTrans input="BinC" output="BoutC" target="//@states[name='C']" source="//@states[name='B']"/>
  </states>
  <states xsi:type="fsm:SteadyState" name="C" outgoingTrans="//@states[name='C']/@outTrans.0" incomingTrans="//@states[name='B']/@outTrans.0 //@states[name='A']/@outTrans.1">
    <outTrans input="CinD" output="CoutD" target="//@states[name='D']" source="//@states[name='C']"/>
  </states>
  <states xsi:type="fsm:SteadyState" name="D" outgoingTrans="//@states[name='D']/@outTrans.0 //@states[name='D']/@outTrans.1 //@states[name='D']/@outTrans.2" incomingTrans="//@states[name='C']/@outTrans.0">
    <outTrans input="DinE" output="DoutE" target="//@states[name='E']" source="//@states[name='D']"/>
    <outTrans input="DinA" output="DoutA" target="//@states[name='A']" source="//@states[name='D']"/>
    <outTrans input="Din_init" output="Dout_init" target="//@states[name='init']" source="//@states[name='D']"/>
  </states>
  <states xsi:type="fsm:TransientState" name="E" outgoingTrans="//@states[name='E']/@outTrans.0" incomingTrans="//@states[name='D']/@outTrans.0">
    <outTrans input="Eout_init" output="Eout_init" target="//@states[name='init']" source="//@states[name='E']"/>
  </states>
</fsm:FSM>
