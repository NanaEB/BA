package fsm.diagram.providers;

/**
 * @generated
 */
public class FsmElementTypes {

		/**
 * @generated
 */
private FsmElementTypes() {
}
	
		/**
 * @generated
 */
private static java.util.Map<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement> elements;

	/**
 * @generated
 */
private static org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages elementTypeImages = new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypeImages(	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().getItemProvidersAdapterFactory());

	/**
 * @generated
 */
private static java.util.Set<org.eclipse.gmf.runtime.emf.type.core.IElementType> KNOWN_ELEMENT_TYPES;
	
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType FSM_1000 = getElementType("org.kermeta.fsm.gmf.diagram.FSM_1000");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType SteadyState_2004 = getElementType("org.kermeta.fsm.gmf.diagram.SteadyState_2004");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType TransientState_2002 = getElementType("org.kermeta.fsm.gmf.diagram.TransientState_2002");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType InitialState_2003 = getElementType("org.kermeta.fsm.gmf.diagram.InitialState_2003");  //$NON-NLS-1$
				/**
 * @generated
 */
public static final org.eclipse.gmf.runtime.emf.type.core.IElementType Transition_4001 = getElementType("org.kermeta.fsm.gmf.diagram.Transition_4001");  //$NON-NLS-1$
		
		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImageDescriptor(element);
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.emf.ecore.ENamedElement element) {
	return elementTypeImages.getImage(element);
}

		/**
 * @generated
 */
public static org.eclipse.jface.resource.ImageDescriptor getImageDescriptor(org.eclipse.core.runtime.IAdaptable hint) {
	return getImageDescriptor(getElement(hint));
}

		/**
 * @generated
 */
public static org.eclipse.swt.graphics.Image getImage(org.eclipse.core.runtime.IAdaptable hint) {
	return getImage(getElement(hint));
}

		/**
 * Returns 'type' of the ecore object associated with the hint.
 * 
 * @generated
 */
public static org.eclipse.emf.ecore.ENamedElement getElement(org.eclipse.core.runtime.IAdaptable hint) {
	Object type = hint.getAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType.class);
	if (elements == null) {
		elements = new java.util.IdentityHashMap<org.eclipse.gmf.runtime.emf.type.core.IElementType, org.eclipse.emf.ecore.ENamedElement>();
		
	elements.put(FSM_1000, fsm.FsmPackage.eINSTANCE.getFSM());
					
	
	elements.put(SteadyState_2004, fsm.FsmPackage.eINSTANCE.getSteadyState());
					
	
	elements.put(TransientState_2002, fsm.FsmPackage.eINSTANCE.getTransientState());
					
	
	elements.put(InitialState_2003, fsm.FsmPackage.eINSTANCE.getInitialState());
							
	
	elements.put(Transition_4001, fsm.FsmPackage.eINSTANCE.getTransition());
			}
	return (org.eclipse.emf.ecore.ENamedElement) elements.get(type);
}

		/**
 * @generated
 */
private static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(String id) {
	return org.eclipse.gmf.runtime.emf.type.core.ElementTypeRegistry.getInstance().getType(id);
}

		/**
 * @generated
 */
public static boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	if (KNOWN_ELEMENT_TYPES == null) {
		KNOWN_ELEMENT_TYPES = new java.util.HashSet<org.eclipse.gmf.runtime.emf.type.core.IElementType>();
			KNOWN_ELEMENT_TYPES.add(FSM_1000);
		KNOWN_ELEMENT_TYPES.add(SteadyState_2004);
		KNOWN_ELEMENT_TYPES.add(TransientState_2002);
		KNOWN_ELEMENT_TYPES.add(InitialState_2003);
		KNOWN_ELEMENT_TYPES.add(Transition_4001);
		}
	return KNOWN_ELEMENT_TYPES.contains(elementType);
}
	
		/**
 * @generated
 */
	public static org.eclipse.gmf.runtime.emf.type.core.IElementType getElementType(int visualID) {
		switch (visualID) {
				case fsm.diagram.edit.parts.FSMEditPart.VISUAL_ID:		return FSM_1000;
	case fsm.diagram.edit.parts.SteadyStateEditPart.VISUAL_ID:		return SteadyState_2004;
	case fsm.diagram.edit.parts.TransientStateEditPart.VISUAL_ID:		return TransientState_2002;
	case fsm.diagram.edit.parts.InitialStateEditPart.VISUAL_ID:		return InitialState_2003;
	case fsm.diagram.edit.parts.TransitionEditPart.VISUAL_ID:		return Transition_4001;
		}
		return null;
	}
	
		/**
 * @generated
 */
	public static final org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes TYPED_INSTANCE 
		= new org.eclipse.gmf.tooling.runtime.providers.DiagramElementTypes(elementTypeImages) {
		
		/**
 * @generated
 */
		@Override

		public boolean isKnownElementType(org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
			return fsm.diagram.providers.FsmElementTypes.isKnownElementType(elementType);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.gmf.runtime.emf.type.core.IElementType getElementTypeForVisualId(int visualID) {
			return fsm.diagram.providers.FsmElementTypes.getElementType(visualID);
		}
		
		/**
 * @generated
 */
		@Override

		public org.eclipse.emf.ecore.ENamedElement getDefiningNamedElement(org.eclipse.core.runtime.IAdaptable elementTypeAdapter) {
			return fsm.diagram.providers.FsmElementTypes.getElement(elementTypeAdapter);
		}
	}; 

	}
