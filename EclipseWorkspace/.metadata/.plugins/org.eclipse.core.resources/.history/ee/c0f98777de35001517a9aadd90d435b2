	package fsm.diagram.navigator;

/**
 * @generated
 */
public class FsmNavigatorLabelProvider extends org.eclipse.jface.viewers.LabelProvider implements org.eclipse.ui.navigator.ICommonLabelProvider, org.eclipse.jface.viewers.ITreePathLabelProvider {

		/**
 * @generated
 */
static {
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
public void updateLabel(org.eclipse.jface.viewers.ViewerLabel label, org.eclipse.jface.viewers.TreePath elementPath) {
	Object element = elementPath.getLastSegment();
	if (element instanceof fsm.diagram.navigator.FsmNavigatorItem && !isOwnView(((fsm.diagram.navigator.FsmNavigatorItem) element).getView())) {
		return;
	}
	label.setText(getText(element));
	label.setImage(getImage(element));
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(Object element) {
	if (element instanceof fsm.diagram.navigator.FsmNavigatorGroup) {
	fsm.diagram.navigator.FsmNavigatorGroup group = (fsm.diagram.navigator.FsmNavigatorGroup) element;
	return fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
}

	if (element instanceof fsm.diagram.navigator.FsmNavigatorItem) {
	fsm.diagram.navigator.FsmNavigatorItem navigatorItem = (fsm.diagram.navigator.FsmNavigatorItem) element;
	if (!isOwnView(navigatorItem.getView())) {
		return super.getImage(element);
	}
	return getImage(navigatorItem.getView());
}

	
		return super.getImage(element);
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(org.eclipse.gmf.runtime.notation.View view) {
		switch (fsm.diagram.part.FsmVisualIDRegistry.getVisualID(view)) {
		case fsm.diagram.edit.parts.FSMEditPart.VISUAL_ID:
	return getImage("Navigator?Diagram?http://www.kermeta.org/fsm?FSM", fsm.diagram.providers.FsmElementTypes.FSM_1000); //$NON-NLS-1$
case fsm.diagram.edit.parts.TransientStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?TransientState", fsm.diagram.providers.FsmElementTypes.TransientState_2001); //$NON-NLS-1$
case fsm.diagram.edit.parts.InitialStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?InitialState", fsm.diagram.providers.FsmElementTypes.InitialState_2002); //$NON-NLS-1$
case fsm.diagram.edit.parts.SteadyStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?SteadyState", fsm.diagram.providers.FsmElementTypes.SteadyState_2003); //$NON-NLS-1$
case fsm.diagram.edit.parts.TransitionEditPart.VISUAL_ID:
	return getImage("Navigator?Link?http://www.kermeta.org/fsm?Transition", fsm.diagram.providers.FsmElementTypes.Transition_4001); //$NON-NLS-1$
	}
		return getImage("Navigator?UnknownElement", null);  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
private org.eclipse.swt.graphics.Image getImage(String key, org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	org.eclipse.jface.resource.ImageRegistry imageRegistry = fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().getImageRegistry();
	org.eclipse.swt.graphics.Image image = imageRegistry.get(key);
	if (image == null && elementType != null && fsm.diagram.providers.FsmElementTypes.isKnownElementType(elementType)) {
		image = fsm.diagram.providers.FsmElementTypes.getImage(elementType);
		imageRegistry.put(key, image);
	}
			
	if (image == null) {
		image = imageRegistry.get("Navigator?ImageNotFound");  //$NON-NLS-1$
		imageRegistry.put(key, image);
	}
	return image;
}
	
		/**
 * @generated
 */
public String getText(Object element) {
	if (element instanceof fsm.diagram.navigator.FsmNavigatorGroup) {
	fsm.diagram.navigator.FsmNavigatorGroup group = (fsm.diagram.navigator.FsmNavigatorGroup) element;
	return group.getGroupName();
}

	if (element instanceof fsm.diagram.navigator.FsmNavigatorItem) {
	fsm.diagram.navigator.FsmNavigatorItem navigatorItem = (fsm.diagram.navigator.FsmNavigatorItem) element;
   		if (!isOwnView(navigatorItem.getView())) {
   			return null;
   		}
   		return getText(navigatorItem.getView());
	}

	
		return super.getText(element);
}
	
		/**
 * @generated
 */
public String getText(org.eclipse.gmf.runtime.notation.View view) {
	if (view.getElement() != null && view.getElement().eIsProxy()) {
		return getUnresolvedDomainElementProxyText(view);
	}
		switch (fsm.diagram.part.FsmVisualIDRegistry.getVisualID(view)) {
		case fsm.diagram.edit.parts.FSMEditPart.VISUAL_ID:
	return getFSM_1000Text(view);
case fsm.diagram.edit.parts.TransientStateEditPart.VISUAL_ID:
	return getTransientState_2001Text(view);
case fsm.diagram.edit.parts.InitialStateEditPart.VISUAL_ID:
	return getInitialState_2002Text(view);
case fsm.diagram.edit.parts.SteadyStateEditPart.VISUAL_ID:
	return getSteadyState_2003Text(view);
case fsm.diagram.edit.parts.TransitionEditPart.VISUAL_ID:
	return getTransition_4001Text(view);
	}
		return getUnknownElementText(view);
}
	
		/**
 * @generated
 */
private String getFSM_1000Text(org.eclipse.gmf.runtime.notation.View view) {
					return "";  //$NON-NLS-1$
	}
	/**
 * @generated
 */
private String getTransientState_2001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.FsmParserProvider.getParser(fsm.diagram.providers.FsmElementTypes.TransientState_2001, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.FsmVisualIDRegistry.getType(fsm.diagram.edit.parts.TransientStateNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getInitialState_2002Text(org.eclipse.gmf.runtime.notation.View view) {
					fsm.InitialState domainModelElement = (fsm.InitialState) view.getElement();
if (domainModelElement != null) {
	return domainModelElement.getName();
} else {
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().logError("No domain element for view with visualID = " + 2002);  //$NON-NLS-1$
		return "";  //$NON-NLS-1$
}
		}
	/**
 * @generated
 */
private String getSteadyState_2003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.FsmParserProvider.getParser(fsm.diagram.providers.FsmElementTypes.SteadyState_2003, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.FsmVisualIDRegistry.getType(fsm.diagram.edit.parts.SteadyStateNameEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTransition_4001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.FsmParserProvider.getParser(fsm.diagram.providers.FsmElementTypes.Transition_4001, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.FsmVisualIDRegistry.getType(fsm.diagram.edit.parts.TransitionInputEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.FsmDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	
		/**
 * @generated
 */
private String getUnknownElementText(org.eclipse.gmf.runtime.notation.View view) {
	return "<UnknownElement Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
private String getUnresolvedDomainElementProxyText(org.eclipse.gmf.runtime.notation.View view) {
	return "<Unresolved domain element Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}

		/**
 * @generated
 */
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

		/**
 * @generated
 */
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
	
		/**
 * @generated
 */
public String getDescription(Object anElement) {
	return null;
}
	
		/**
 * @generated
 */
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return fsm.diagram.edit.parts.FSMEditPart.MODEL_ID.equals(fsm.diagram.part.FsmVisualIDRegistry.getModelID(view));
}

	}
