	package fsm.diagram.navigator;

/**
 * @generated
 */
public class StatemachineNavigatorLabelProvider extends org.eclipse.jface.viewers.LabelProvider implements org.eclipse.ui.navigator.ICommonLabelProvider, org.eclipse.jface.viewers.ITreePathLabelProvider {

		/**
 * @generated
 */
static {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?UnknownElement", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().getImageRegistry().put("Navigator?ImageNotFound", org.eclipse.jface.resource.ImageDescriptor.getMissingImageDescriptor());  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
public void updateLabel(org.eclipse.jface.viewers.ViewerLabel label, org.eclipse.jface.viewers.TreePath elementPath) {
	Object element = elementPath.getLastSegment();
	if (element instanceof fsm.diagram.navigator.StatemachineNavigatorItem && !isOwnView(((fsm.diagram.navigator.StatemachineNavigatorItem) element).getView())) {
		return;
	}
	label.setText(getText(element));
	label.setImage(getImage(element));
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(Object element) {
	if (element instanceof fsm.diagram.navigator.StatemachineNavigatorGroup) {
	fsm.diagram.navigator.StatemachineNavigatorGroup group = (fsm.diagram.navigator.StatemachineNavigatorGroup) element;
	return fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().getBundledImage(group.getIcon());
}

	if (element instanceof fsm.diagram.navigator.StatemachineNavigatorItem) {
	fsm.diagram.navigator.StatemachineNavigatorItem navigatorItem = (fsm.diagram.navigator.StatemachineNavigatorItem) element;
	if (!isOwnView(navigatorItem.getView())) {
		return super.getImage(element);
	}
	return getImage(navigatorItem.getView());
}

	
		return super.getImage(element);
}
	
		/**
 * @generated
 */
public org.eclipse.swt.graphics.Image getImage(org.eclipse.gmf.runtime.notation.View view) {
		switch (fsm.diagram.part.StatemachineVisualIDRegistry.getVisualID(view)) {
		case fsm.diagram.edit.parts.StateMachineEditPart.VISUAL_ID:
	return getImage("Navigator?Diagram?http://www.kermeta.org/fsm?StateMachine", fsm.diagram.providers.StatemachineElementTypes.StateMachine_1000); //$NON-NLS-1$
case fsm.diagram.edit.parts.NormalStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?NormalState", fsm.diagram.providers.StatemachineElementTypes.NormalState_2001); //$NON-NLS-1$
case fsm.diagram.edit.parts.InitialStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?InitialState", fsm.diagram.providers.StatemachineElementTypes.InitialState_2002); //$NON-NLS-1$
case fsm.diagram.edit.parts.FinalStateEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?FinalState", fsm.diagram.providers.StatemachineElementTypes.FinalState_2003); //$NON-NLS-1$
case fsm.diagram.edit.parts.StateMachineVariableEditPart.VISUAL_ID:
	return getImage("Navigator?TopLevelNode?http://www.kermeta.org/fsm?StateMachineVariable", fsm.diagram.providers.StatemachineElementTypes.StateMachineVariable_2004); //$NON-NLS-1$
case fsm.diagram.edit.parts.ActionEditPart.VISUAL_ID:
	return getImage("Navigator?Node?http://www.kermeta.org/fsm?Action", fsm.diagram.providers.StatemachineElementTypes.Action_3001); //$NON-NLS-1$
case fsm.diagram.edit.parts.TransitionEditPart.VISUAL_ID:
	return getImage("Navigator?Link?http://www.kermeta.org/fsm?Transition", fsm.diagram.providers.StatemachineElementTypes.Transition_4001); //$NON-NLS-1$
case fsm.diagram.edit.parts.StateReachableEditPart.VISUAL_ID:
	return getImage("Navigator?Link?http://www.kermeta.org/fsm?State?reachable", fsm.diagram.providers.StatemachineElementTypes.StateReachable_4002); //$NON-NLS-1$
	}
		return getImage("Navigator?UnknownElement", null);  //$NON-NLS-1$
}
	
		/**
 * @generated
 */
private org.eclipse.swt.graphics.Image getImage(String key, org.eclipse.gmf.runtime.emf.type.core.IElementType elementType) {
	org.eclipse.jface.resource.ImageRegistry imageRegistry = fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().getImageRegistry();
	org.eclipse.swt.graphics.Image image = imageRegistry.get(key);
	if (image == null && elementType != null && fsm.diagram.providers.StatemachineElementTypes.isKnownElementType(elementType)) {
		image = fsm.diagram.providers.StatemachineElementTypes.getImage(elementType);
		imageRegistry.put(key, image);
	}
			
	if (image == null) {
		image = imageRegistry.get("Navigator?ImageNotFound");  //$NON-NLS-1$
		imageRegistry.put(key, image);
	}
	return image;
}
	
		/**
 * @generated
 */
public String getText(Object element) {
	if (element instanceof fsm.diagram.navigator.StatemachineNavigatorGroup) {
	fsm.diagram.navigator.StatemachineNavigatorGroup group = (fsm.diagram.navigator.StatemachineNavigatorGroup) element;
	return group.getGroupName();
}

	if (element instanceof fsm.diagram.navigator.StatemachineNavigatorItem) {
	fsm.diagram.navigator.StatemachineNavigatorItem navigatorItem = (fsm.diagram.navigator.StatemachineNavigatorItem) element;
   		if (!isOwnView(navigatorItem.getView())) {
   			return null;
   		}
   		return getText(navigatorItem.getView());
	}

	
		return super.getText(element);
}
	
		/**
 * @generated
 */
public String getText(org.eclipse.gmf.runtime.notation.View view) {
	if (view.getElement() != null && view.getElement().eIsProxy()) {
		return getUnresolvedDomainElementProxyText(view);
	}
		switch (fsm.diagram.part.StatemachineVisualIDRegistry.getVisualID(view)) {
		case fsm.diagram.edit.parts.StateMachineEditPart.VISUAL_ID:
	return getStateMachine_1000Text(view);
case fsm.diagram.edit.parts.NormalStateEditPart.VISUAL_ID:
	return getNormalState_2001Text(view);
case fsm.diagram.edit.parts.InitialStateEditPart.VISUAL_ID:
	return getInitialState_2002Text(view);
case fsm.diagram.edit.parts.FinalStateEditPart.VISUAL_ID:
	return getFinalState_2003Text(view);
case fsm.diagram.edit.parts.StateMachineVariableEditPart.VISUAL_ID:
	return getStateMachineVariable_2004Text(view);
case fsm.diagram.edit.parts.ActionEditPart.VISUAL_ID:
	return getAction_3001Text(view);
case fsm.diagram.edit.parts.TransitionEditPart.VISUAL_ID:
	return getTransition_4001Text(view);
case fsm.diagram.edit.parts.StateReachableEditPart.VISUAL_ID:
	return getStateReachable_4002Text(view);
	}
		return getUnknownElementText(view);
}
	
		/**
 * @generated
 */
private String getStateMachine_1000Text(org.eclipse.gmf.runtime.notation.View view) {
					return "";  //$NON-NLS-1$
	}
	/**
 * @generated
 */
private String getNormalState_2001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.NormalState_2001, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.NormalStateLabelEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getInitialState_2002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.InitialState_2002, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.InitialStateLabelEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5003); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getFinalState_2003Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.FinalState_2003, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.FinalStateLabelEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5004); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getStateMachineVariable_2004Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.StateMachineVariable_2004, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.StateMachineVariableNameTypeEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5005); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getAction_3001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.Action_3001, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.ActionActionLabelEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 5001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getTransition_4001Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.Transition_4001, view.getElement() != null ? view.getElement() : view, fsm.diagram.part.StatemachineVisualIDRegistry.getType(fsm.diagram.edit.parts.TransitionLabelGuardLabelActionLaEditPart.VISUAL_ID));
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6001); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	/**
 * @generated
 */
private String getStateReachable_4002Text(org.eclipse.gmf.runtime.notation.View view) {
					org.eclipse.gmf.runtime.common.ui.services.parser.IParser parser = fsm.diagram.providers.StatemachineParserProvider.getParser(fsm.diagram.providers.StatemachineElementTypes.StateReachable_4002, view.getElement() != null ? view.getElement() : view, org.eclipse.gmf.runtime.common.ui.services.parser.CommonParserHint.DESCRIPTION);
if (parser != null) {
	return parser.getPrintString(new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(view.getElement() != null ? view.getElement() : view), org.eclipse.gmf.runtime.common.ui.services.parser.ParserOptions.NONE.intValue());
} else {
	fsm.diagram.part.StatemachineDiagramEditorPlugin.getInstance().logError("Parser was not found for label " + 6002); //$NON-NLS-1$
	return "";  //$NON-NLS-1$
}
	}
	
		/**
 * @generated
 */
private String getUnknownElementText(org.eclipse.gmf.runtime.notation.View view) {
	return "<UnknownElement Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
private String getUnresolvedDomainElementProxyText(org.eclipse.gmf.runtime.notation.View view) {
	return "<Unresolved domain element Visual_ID = " + view.getType() + ">";  //$NON-NLS-1$  //$NON-NLS-2$
}
	
		/**
 * @generated
 */
public void init(org.eclipse.ui.navigator.ICommonContentExtensionSite aConfig) {
}

		/**
 * @generated
 */
public void restoreState(org.eclipse.ui.IMemento aMemento) {
}

		/**
 * @generated
 */
public void saveState(org.eclipse.ui.IMemento aMemento) {
}
	
		/**
 * @generated
 */
public String getDescription(Object anElement) {
	return null;
}
	
		/**
 * @generated
 */
private boolean isOwnView(org.eclipse.gmf.runtime.notation.View view) {
	return fsm.diagram.edit.parts.StateMachineEditPart.MODEL_ID.equals(fsm.diagram.part.StatemachineVisualIDRegistry.getModelID(view));
}

	}
