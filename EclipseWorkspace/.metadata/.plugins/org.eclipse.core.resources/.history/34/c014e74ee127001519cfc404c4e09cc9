package fsm.diagram.edit.parts;

/**
 * @generated
 */
public class TransitionEditPart extends org.eclipse.gmf.runtime.diagram.ui.editparts.ConnectionNodeEditPart 	implements org.eclipse.gmf.runtime.diagram.ui.editparts.ITreeBranchEditPart {

			/**
 * @generated
 */
	public static final int VISUAL_ID = 4001;
	
		/**
 * @generated
 */
	public TransitionEditPart(org.eclipse.gmf.runtime.notation.View view) {
		super(view);
	}
	
		/**
 * @generated
 */
	protected void createDefaultEditPolicies() {
			super.createDefaultEditPolicies();
			installEditPolicy(org.eclipse.gmf.runtime.diagram.ui.editpolicies.EditPolicyRoles.SEMANTIC_ROLE, new fsm.diagram.edit.policies.TransitionItemSemanticEditPolicy());
						}

		/**
 * @generated
 */
	protected boolean addFixedChild(org.eclipse.gef.EditPart childEditPart) {
						 	if (childEditPart instanceof fsm.diagram.edit.parts.WrappingLabel4EditPart) {
 		((fsm.diagram.edit.parts.WrappingLabel4EditPart) childEditPart).setLabel(
 				getPrimaryShape().getFigureTransitionInputFigure());
 				return true;
 	}
						 	if (childEditPart instanceof fsm.diagram.edit.parts.WrappingLabel5EditPart) {
 		((fsm.diagram.edit.parts.WrappingLabel5EditPart) childEditPart).setLabel(
 				getPrimaryShape().getFigureTransitionOutputFigure());
 				return true;
 	}
				return false;
	}


		/**
 * @generated
 */
	protected void addChildVisual(org.eclipse.gef.EditPart childEditPart, int index) {
		if (addFixedChild(childEditPart)) {
			return;
		}
		super.addChildVisual(childEditPart, index);
	}


		/**
 * @generated
 */
	protected boolean removeFixedChild(org.eclipse.gef.EditPart childEditPart) {
							if (childEditPart instanceof fsm.diagram.edit.parts.WrappingLabel4EditPart) {
 		return true;
 	}
							if (childEditPart instanceof fsm.diagram.edit.parts.WrappingLabel5EditPart) {
 		return true;
 	}
				return false;
	}


		/**
 * @generated
 */
	protected void removeChildVisual(org.eclipse.gef.EditPart childEditPart) {
		if (removeFixedChild(childEditPart)) {
			return;
		}
		super.removeChildVisual(childEditPart);
	}

	
		/**
 * Creates figure for this edit part.
 * 
 * Body of this method does not depend on settings in generation model
 * so you may safely remove <i>generated</i> tag and modify it.
 * 
 * @generated
 */
	
	protected org.eclipse.draw2d.Connection createConnectionFigure() {
		return new TransitionFigure();
	}

	/**
 * @generated
 */
	public TransitionFigure getPrimaryShape() {
		return (TransitionFigure) getFigure();
	}

	
/**
 * @generated
 */
public class TransitionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {


	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransitionInputFigure; 
	/**
	 * @generated
	 */
	private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureTransitionOutputFigure; 




	/**
	 * @generated
	 */
	public TransitionFigure() {
		
		createContents();
		setTargetDecoration(createTargetDecoration());
	}


	/**
	 * @generated
	 */
	private void createContents(){


fFigureTransitionInputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();

fFigureTransitionInputFigure.setText("input");

this.add(fFigureTransitionInputFigure);



fFigureTransitionOutputFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();

fFigureTransitionOutputFigure.setText("output");

this.add(fFigureTransitionOutputFigure);


	}

	/**
	 * @generated
	 */
	private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {
		org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();
org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();
pl.addPoint(getMapMode().DPtoLP(-1)
, getMapMode().DPtoLP(1)
);
pl.addPoint(getMapMode().DPtoLP(0)
, getMapMode().DPtoLP(0)
);
pl.addPoint(getMapMode().DPtoLP(-1)
, getMapMode().DPtoLP(-1)
);
df.setTemplate(pl);
df.setScale(getMapMode().DPtoLP(7)
, getMapMode().DPtoLP(3)
);
		return df;
	}


	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransitionInputFigure() {
		return fFigureTransitionInputFigure;
	}
	/**
	 * @generated
	 */
	public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureTransitionOutputFigure() {
		return fFigureTransitionOutputFigure;
	}


}


	
	}
