package fsm.diagram.providers;

/**
 * @generated
 */
public class StatemachineParserProvider extends org.eclipse.gmf.runtime.common.core.service.AbstractProvider implements org.eclipse.gmf.runtime.common.ui.services.parser.IParserProvider {
	
	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser normalStateLabel_5002Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getNormalStateLabel_5002Parser() {
		if (normalStateLabel_5002Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getState_Label()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
								normalStateLabel_5002Parser = parser;
		}
		return normalStateLabel_5002Parser;
	}


	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser initialStateLabel_5003Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getInitialStateLabel_5003Parser() {
		if (initialStateLabel_5003Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getState_Label()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
								initialStateLabel_5003Parser = parser;
		}
		return initialStateLabel_5003Parser;
	}


	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser finalStateLabel_5004Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getFinalStateLabel_5004Parser() {
		if (finalStateLabel_5004Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getState_Label()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
								finalStateLabel_5004Parser = parser;
		}
		return finalStateLabel_5004Parser;
	}


	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser stateMachineVariableNameType_5005Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getStateMachineVariableNameType_5005Parser() {
		if (stateMachineVariableNameType_5005Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getStateMachineVariable_Name(), fsm.FsmPackage.eINSTANCE.getStateMachineVariable_Type()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
					parser.setViewPattern("{1}:{0}"); //$NON-NLS-1$
				parser.setEditorPattern("{1}:{0}"); //$NON-NLS-1$
				parser.setEditPattern("{1}:{0}"); //$NON-NLS-1$
				stateMachineVariableNameType_5005Parser = parser;
		}
		return stateMachineVariableNameType_5005Parser;
	}


	
	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser actionActionLabel_5001Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getActionActionLabel_5001Parser() {
		if (actionActionLabel_5001Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getAction_ActionLabel()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
								actionActionLabel_5001Parser = parser;
		}
		return actionActionLabel_5001Parser;
	}


	
	
	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser transitionLabelGuardLabelActionLabel_6001Parser;

	/**
 * @generated
 */
	private org.eclipse.gmf.runtime.common.ui.services.parser.IParser getTransitionLabelGuardLabelActionLabel_6001Parser() {
		if (transitionLabelGuardLabelActionLabel_6001Parser == null) {
						org.eclipse.emf.ecore.EAttribute[] features = new org.eclipse.emf.ecore.EAttribute[] {
				fsm.FsmPackage.eINSTANCE.getTransition_Label(), fsm.FsmPackage.eINSTANCE.getTransition_GuardLabel(), fsm.FsmPackage.eINSTANCE.getTransition_ActionLabel()
			};
				fsm.diagram.parsers.MessageFormatParser parser = new fsm.diagram.parsers.MessageFormatParser(features);
					parser.setViewPattern("{0} [{1}] {2}"); //$NON-NLS-1$
				parser.setEditorPattern("{0} [{1}] {2}"); //$NON-NLS-1$
				parser.setEditPattern("{0} [{1}] {2}"); //$NON-NLS-1$
				transitionLabelGuardLabelActionLabel_6001Parser = parser;
		}
		return transitionLabelGuardLabelActionLabel_6001Parser;
	}



		/**
 * @generated
 */
	protected org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(int visualID) {
		switch (visualID) {
				case fsm.diagram.edit.parts.NormalStateLabelEditPart.VISUAL_ID: return getNormalStateLabel_5002Parser();
		case fsm.diagram.edit.parts.InitialStateLabelEditPart.VISUAL_ID: return getInitialStateLabel_5003Parser();
		case fsm.diagram.edit.parts.FinalStateLabelEditPart.VISUAL_ID: return getFinalStateLabel_5004Parser();
		case fsm.diagram.edit.parts.StateMachineVariableNameTypeEditPart.VISUAL_ID: return getStateMachineVariableNameType_5005Parser();
				case fsm.diagram.edit.parts.ActionActionLabelEditPart.VISUAL_ID: return getActionActionLabel_5001Parser();
				case fsm.diagram.edit.parts.TransitionLabelGuardLabelActionLaEditPart.VISUAL_ID: return getTransitionLabelGuardLabelActionLabel_6001Parser();
		}
		return null;
	}
		/**
 * Utility method that consults ParserService
 * @generated
 */
	public static org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(org.eclipse.gmf.runtime.emf.type.core.IElementType type, org.eclipse.emf.ecore.EObject object, String parserHint) {
		return org.eclipse.gmf.runtime.common.ui.services.parser.ParserService.getInstance().getParser(new HintAdapter(type, object, parserHint));
	}
		/**
 * @generated
 */
	public org.eclipse.gmf.runtime.common.ui.services.parser.IParser getParser(
			org.eclipse.core.runtime.IAdaptable hint) {
		String vid = (String) hint.getAdapter(String.class);
		if (vid != null) {
			return getParser(fsm.diagram.part.StatemachineVisualIDRegistry.getVisualID(vid));
		}
		org.eclipse.gmf.runtime.notation.View view =
				(org.eclipse.gmf.runtime.notation.View) hint.getAdapter(org.eclipse.gmf.runtime.notation.View.class);
		if (view != null) {
			return getParser(fsm.diagram.part.StatemachineVisualIDRegistry.getVisualID(view));
		}
		return null;
	}

		/**
 * @generated
 */
	public boolean provides(org.eclipse.gmf.runtime.common.core.service.IOperation operation) {
		if (operation instanceof org.eclipse.gmf.runtime.common.ui.services.parser.GetParserOperation) {
			org.eclipse.core.runtime.IAdaptable hint =
					((org.eclipse.gmf.runtime.common.ui.services.parser.GetParserOperation) operation).getHint();
			if (fsm.diagram.providers.StatemachineElementTypes.getElement(hint) == null) {
				return false;
			}
			return getParser(hint) != null;
		}
		return false;
	}

		/**
 * @generated
 */
	private static class HintAdapter extends org.eclipse.gmf.runtime.emf.ui.services.parser.ParserHintAdapter {

		/**
 * @generated
 */
		private final org.eclipse.gmf.runtime.emf.type.core.IElementType elementType;

		/**
 * @generated
 */
		public HintAdapter(org.eclipse.gmf.runtime.emf.type.core.IElementType type,
				org.eclipse.emf.ecore.EObject object, String parserHint) {
			super(object, parserHint);
			assert type != null;
			elementType = type;
		}

		/**
 * @generated
 */
		public Object getAdapter(Class adapter) {
			if (org.eclipse.gmf.runtime.emf.type.core.IElementType.class.equals(adapter)) {
				return elementType;
			}
			return super.getAdapter(adapter);
		}
	}

	}
